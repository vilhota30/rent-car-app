{"version":3,"file":"static/js/374.3b84484f.chunk.js","mappings":"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","sources":["components/DropdownInput/DropdownInput.styled.jsx","components/DropdownInput/DropdownInput.jsx","components/RangeInput/RangeInput.styled.jsx","components/RangeInput/RangeInput.jsx","components/helpers/PricesFilter.js","components/Filter/Filter.jsx","components/helpers/Params.js","pages/CarListPage/CarListPage.jsx"],"sourcesContent":["import styled from \"styled-components\";\n\nexport const Dropdown = styled.div`\nposition: relative;\n`;\n\nexport const Input = styled.input`\nwidth: 100%;\npadding: 14px 18px;\nborder-radius: 14px;\nbackground: #F7F7FB;\nborder: none;\noutline: none;\n\ncursor: pointer;\n\ntext-align: start;\nfont-size: 18px;\nfont-weight: 500;\nline-height: 22px;\ncolor: #121417;\n`;\n\nexport const List = styled.ul`\nposition: absolute;\nz-index: 1000;\ntop: 110%;\nleft: 0;\nright: 0;\n\nbackground-color: mediumslateblue;\nborder-bottom-left-radius: 14px;\nborder-top-left-radius: 14px;\n\nborder: 1px solid rgba(18, 20, 23, 0.05);\noverflow: auto;\n`;\n\nexport const Item = styled.li`\ncolor: black;\n// list-style: none;\nfont-weight: 600;\npadding: 5px 10px;\ncursor: pointer;\nfont-size: 16px;\n`\n\nexport const Label = styled.label`\ndisplay: block;\nfont-weight: 500;\ncolor: black;\nmargin-bottom: 8px;\n`;\n\n","import React, { useEffect, useRef, useState } from 'react';\nimport { Dropdown, Input, List, Item, Label } from './DropdownInput.styled'; \n// import { nanoid } from 'nanoid';\n\nconst DropdownInput = ({ label = 'Label', options, placeholder = 'Select option', onChange, name }) => {\n// console.log(options);\n\n    const [isOpen, setIsOpen] = useState(false);\n    const [selectedOption, setSelectedOption] = useState(placeholder);\n    const inputRef = useRef(null);\n\n    const handleClickOnOption = (option) => {\n        console.log(option);\n\n        // const filteredCars = options.filter((car) => {\n        //     return car.label === option;\n        //   });\n\n        setSelectedOption(option.label);\n        onChange({ [name]: option.value });\n        setIsOpen(false);\n    };\n\n    const handleOnEmptySelect = () => {\n        setSelectedOption(placeholder)\n        onChange({ [name]: null });\n        setIsOpen(false);\n        console.log('Empty Select!');\n    }\n\n    useEffect(() => {\n        const handleOutsideClick = (event) => {\n            if (!inputRef.current) {\n                return;\n            }\n            if (inputRef.current && !inputRef.current.contains(event.target) && isOpen) {\n                setIsOpen(false)\n            }\n        }\n\n        if (!isOpen) {\n            return\n        }\n\n        document.addEventListener('mousedown', handleOutsideClick)\n\n        return () => {\n            document.removeEventListener('mousedown', handleOutsideClick)\n        }\n\n    }, [isOpen])\n\n\n    return (\n        <div style={{ backgroundColor: \"mediumslateblue\", width: \"500px\", height: \"93px\", marginLeft: \"20px\", borderRadius: \"8px\", padding: \"8px\"}}>\n            <Label>{\"Car brand\"}</Label>\n            <Dropdown ref={inputRef}>\n                <Input\n                    name={name}\n                    type=\"button\"\n                    onClick={() => setIsOpen(!isOpen)}\n                    value={selectedOption}\n                />\n                {/* <Shevron className={`${styles.shevron} ${isOpen && styles.active}`} /> */}\n                {isOpen && (\n                    <List>\n                        <Item\n                        onClick={() => handleOnEmptySelect()}\n                        >{placeholder}</Item>\n                         {options.map((option) => ( \n                            <Item\n                                key={option.value}\n                                onClick={() => handleClickOnOption(option)}\n                                // style={{\n                                //      backgroundColor: selectedOption === option.value ? 'blue' : 'mediumlateblue',\n                                // }}\n                            >\n                                {option.label}\n                            </Item>\n                         ))}\n                    </List>\n                )}\n                {selectedOption && (selectedOption !== placeholder) && <button style={{ color: \"white\", backgroundColor: \"blue\", width: \"280px\", height: \"30px\", display: \"flex\",\n    justifyContent: \"center\", marginTop: \"10px\", marginLeft: \"auto\", marginRight: \"auto\", borderRadius: \"8px\", alignItems: \"center\"}} onClick={() => handleOnEmptySelect()}>Delete Option </button>}\n            </Dropdown>\n        </div>\n    );\n};\n\n\nexport default DropdownInput;\n","import styled from \"styled-components\";\n\nexport const Container = styled.div`\ndisplay: flex;\nalign-items: center;\njustify-content: center;\npadding: 10px 10px;\nmargin-left: 10px;\nmargin-right: 10px;\nheight: 93px;\nborder-radius: 8px;\nbackground-color: mediumslateblue;\n\n`;\n\nexport const Label = styled.label`\ndisplay: block;\n`;","import React, { useEffect, useState } from 'react';\nimport { Container, Label } from './RangeInput.styled';\n\nfunction RangeInput({ minName, maxName, onChange, label = 'Set range' }) {\n    const [range, setRange] = useState({\n        [minName]: null,\n        [maxName]: null\n    });\n\n    const handleChange = (e) => {\n        setRange({\n            ...range,\n            [e.target.getAttribute('name')]: parseInt(e.target.value)\n        });\n    };\n\n    useEffect(() => {\n        onChange({ [minName]: range[minName], [maxName]: range[maxName] })\n    }, [range, onChange, maxName, minName])\n\n    return (\n        <Container>\n            <Label>{label}</Label>\n            <div>\n                <input style={{borderRadius: \"4px\"}}\n                    placeholder='From'\n                    type=\"number\"\n                    name={minName}\n                    onChange={(e) => handleChange(e)}\n                />\n                <input style={{borderRadius: \"4px\"}}\n                    placeholder='To'\n                    type=\"number\"\n                    name={maxName}\n                    onChange={(e) => handleChange(e)}\n                />\n            </div>\n        </Container>\n    );\n}\n\nexport default RangeInput;\n","const PricesFilter = (min, max, step) => {\n    const result = [];\n    const steps = Math.floor((max - min) / step);\n  \n    for (let i = 0; i <= steps; i++) {\n      const price = min + i * step;\n      result.push({ value: price, label: `$ ${price}` });\n    }\n  \n    return result;\n  };\n  \n  export default PricesFilter;\n  ","import React, { useCallback, useState } from 'react';\nimport { useSelector } from 'react-redux'\nimport DropdownInput from '../DropdownInput/DropdownInput';\nimport RangeInput from '../RangeInput/RangeInput';\nimport PricesFilter from 'components/helpers/PricesFilter';\nimport { getModelCar } from '../../redux/cardata/selectors';\n\nfunction Filter({ acceptFilter }) {\n     const [filterInitState, setFilterInitState] = useState({\n         make: '',\n         maxPrice: '',\n         minMileage: null,\n         maxMileage: null,\n     })\n    \n     const modelCarOptions = useSelector(getModelCar);\n     const pricesOptions = PricesFilter(10, 100, 10)\n    // const brandsOptions = useSelector(state => state.adverts.brands)\n\n     const onFilterChange = useCallback(\n         (value) => {\n             setFilterInitState((state) => ({\n                 ...state,\n                 ...value\n             }));\n         },\n         [setFilterInitState]\n     );\n\n\n\n     const onFilterSet = () => {\n         if (filterInitState.minMileage > filterInitState.maxMileage && filterInitState.maxMileage) {\n             return alert('Minimum milage cannot be higher than maximum milage')\n         }\n         acceptFilter(filterInitState)\n    }\n\n    return (\n        <div style={{display: \"flex\", flexFlow: \"row\", marginBottom: \"10px\"}}>\n               <DropdownInput \n                options={modelCarOptions}\n                name={'make'}\n                onChange={onFilterChange}\n                label='Car brand' />\n                 <DropdownInput\n                options={pricesOptions}\n                name={'maxPrice'}\n                onChange={onFilterChange}\n                placeholder={'To $'}\n                label='Price / 1 hour' />\n             <RangeInput label={'Сar mileage / km'} maxName={'maxMileage'} minName={'minMileage'} onChange={onFilterChange} />\n            <button style={{color: \"white\", backgroundColor: \"blue\", width: \"280px\", height: \"30px\", borderRadius: \"8px\", alignItems: \"center\", marginTop: \"35px\"}} onClick={() => onFilterSet(filterInitState)}>Search</button>\n        </div>\n    )\n}\n\nexport default Filter;\n\n\n","const setFilterParams = (itemsOnPage, currentPage, filter) => {\n    let params = '';\n    if (filter && filter.make) {\n      params = params.concat(`&make=${filter.make}`);\n    }\n    params = params.concat(`&limit=${itemsOnPage}&page=${currentPage}`);\n    return { params, filter };\n  };\n  \n  export default setFilterParams;","import CarsList from '../../components/CarsList/CarsList';\nimport Filter from 'components/Filter/Filter';\n// import BtnLoadMore from \"../../components/BtnLoadMore/BtnLoadMore\";\nimport Loader from 'components/Loader/Loader';\nimport BackToTop from 'components/BackToTop/BackToTop';\nimport setFilterParams from 'components/helpers/Params';\nimport {fetchAdverts, getCarModel} from \"../../redux/cardata/operations\";\nimport { emptyAdvertList } from '../../redux/cardata/carSlice';\nimport { getAdverts } from '../../redux/cardata/selectors';\nimport { getIsLoading } from '../../redux/cardata/selectors';\n// import { getPagesEnd } from '../../redux/cardata/selectors';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { useEffect, useState } from 'react';\n\n\nconst CarListPage = () => {\n    const [currentPage, setCurrentPage] = useState(1);\n    const [filter, setFilter] = useState(null);\n    const itemsOnPage = 12;\n    \n    \n    const adverts = useSelector(getAdverts);\n    console.log(adverts);\n    const loading = useSelector(getIsLoading);\n    // const pagesEnd = useSelector(getPagesEnd);\n    \n    // console.log(pagesEnd);\n    \n    const dispatch = useDispatch();\n\n      const acceptFilter = (newFilter) => {\n          if (newFilter === filter) {\n              return\n          }\n          dispatch(emptyAdvertList())\n          setFilter(newFilter)\n          setCurrentPage(1)\n     };\n\n    useEffect(() => {\n        dispatch(emptyAdvertList())\n        dispatch(getCarModel())\n    }, [dispatch])\n\n    useEffect(() => {\n        dispatch(fetchAdverts(setFilterParams(itemsOnPage, currentPage, filter)))\n    }, [filter, dispatch, currentPage])\n\n\n    return (\n        <>\n            {loading && <Loader />}\n              <Filter acceptFilter={acceptFilter} /> \n            {(adverts.length < 1) && !loading && <p>There is no adverts that matches filters, try to change them!</p>}\n            <CarsList adverts={adverts}/>\n             {/* { !pagesEnd && !loading && <BtnLoadMore callbackFunction={() => setCurrentPage(currentPage + 1)} />} */}\n            <BackToTop />\n        </>\n    )\n}\n\nexport default CarListPage;"],"names":["Dropdown","styled","_templateObject","_taggedTemplateLiteral","Input","_templateObject2","List","_templateObject3","Item","_templateObject4","Label","_templateObject5","_ref","label","options","_ref$placeholder","placeholder","onChange","name","_useState","useState","_useState2","_slicedToArray","isOpen","setIsOpen","_useState3","_useState4","selectedOption","setSelectedOption","inputRef","useRef","handleOnEmptySelect","_defineProperty","console","log","useEffect","handleOutsideClick","event","current","contains","target","document","addEventListener","removeEventListener","_jsxs","style","backgroundColor","width","height","marginLeft","borderRadius","padding","children","_jsx","ref","type","onClick","value","map","option","handleClickOnOption","color","display","justifyContent","marginTop","marginRight","alignItems","Container","minName","maxName","_ref$label","range","setRange","handleChange","e","_objectSpread","getAttribute","parseInt","_onChange","min","max","step","result","steps","Math","floor","i","price","push","concat","acceptFilter","make","maxPrice","minMileage","maxMileage","filterInitState","setFilterInitState","modelCarOptions","useSelector","getModelCar","pricesOptions","PricesFilter","onFilterChange","useCallback","state","flexFlow","marginBottom","DropdownInput","RangeInput","alert","onFilterSet","itemsOnPage","currentPage","filter","params","setCurrentPage","setFilter","adverts","getAdverts","loading","getIsLoading","dispatch","useDispatch","emptyAdvertList","getCarModel","fetchAdverts","setFilterParams","_Fragment","Loader","Filter","newFilter","length","CarsList","BackToTop"],"sourceRoot":""}